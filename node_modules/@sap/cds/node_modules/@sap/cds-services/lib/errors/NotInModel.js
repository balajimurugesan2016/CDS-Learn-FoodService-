/**
 * Thrown in case the specified element cannot be found in the reflection model.
 * @extends {external:Error}
 * @alias module:errors.NotInModel
 */
class NotInModel extends Error {
  /**
   * @param {string} element - Not found element.
   * @param {string} model - name of the model
   */
  constructor (element, model) {
    super(`Element ${element} is not defined in the model${filename(model)}`)
    this.name = this.constructor.name
    Error.captureStackTrace(this, this.constructor)
  }
}

const filename = model => {
  if (!model) return ''
  let srv = model.find('service')
  return (srv && srv.$location && ` ${srv.$location.file}`) || ''
}

module.exports = NotInModel
