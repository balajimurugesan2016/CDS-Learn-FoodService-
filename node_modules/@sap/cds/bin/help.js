module.exports = exports = Object.assign (help, {help:`
# USAGE

    *cds* <command> [<args>]
    *cds* <src>  =  *cds compile* <src>
    *cds*        =  *cds help*

# COMMANDS

    *i* | *init*       jump-start cds-based projects
    *c* | *compile*    process models selectively
    *m* | *import*     add models from external sources
    *s* | *serve*      run servers locally
    *r* | *repl*       read-eval-event loop
    *e* | *env*        get/set cds configuration
    *b* | *build*      prepare for deployment
    *d* | *deploy*     e.g. to databases or cloud
    *v* | *version*    get detailed version information
    *?* | *help*       get detailed usage information

  Learn more about each with:
  *cds help* <command> or
  *cds* <command> *?*

`})

exports.with = (...shortcuts) => Object.assign (help, ...shortcuts)

function help (topic) {
  const { format } = require('./utils/term')
  if (Array.isArray(topic))  topic = topic[0]
  let txt = !topic ? help.help : _help4(topic)
  if (txt)  return console.log (format.poorMarkdown (txt))
  throw new Error(`Didn't find a help topic for '${ topic._name || topic.name || topic }'.`)
}

function _help4 (cmd) {
  if (cmd && typeof cmd !== 'string') return cmd.help
  if (cmd in help)  cmd = help[cmd]  // i.e. shortcuts we got from CLI
  try { return require(`@sap/cds-dk/bin/${cmd}`).help } catch(e) {_ignored(e)}
  try { return require(`./${cmd}`).help } catch(e) {_ignored(e)}
}

function _ignored(e) {
  if (e.code !== 'MODULE_NOT_FOUND')  throw e
}

/* eslint no-console: off */
if (!module.parent)  help (['init'])